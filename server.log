
> nextjs-shadcn@0.1.0 dev
> next dev -H 0.0.0.0 --turbopack

   ▲ Next.js 15.3.2 (Turbopack)
   - Local:        http://localhost:3000
   - Network:      http://0.0.0.0:3000

 ✓ Starting...
 ✓ Ready in 1283ms
 ○ Compiling / ...
 ✓ Compiled / in 5.5s
 GET / 200 in 5932ms
 ○ Compiling /api/categories ...
Database initialization error: SqliteError: database disk image is malformed
    at initDatabase (src/lib/database.ts:23:7)
    at Object.getAll (src/lib/database.ts:228:16)
    at GET (src/app/api/categories/route.ts:7:39)
  21 |
  22 |     // Initialize database tables
> 23 |     db.exec(`
     |       ^
  24 |       CREATE TABLE IF NOT EXISTS categories (
  25 |         id INTEGER PRIMARY KEY AUTOINCREMENT,
  26 |         name TEXT NOT NULL, {
  code: 'SQLITE_CORRUPT'
}
 GET /api/categories 200 in 5121ms
 ✓ Compiled /api/categories in 5.1s
 GET /api/crawl 200 in 5087ms
 GET /api/crawl 200 in 26ms
 GET /api/crawl 200 in 33ms
 GET /api/crawl 200 in 22ms
 GET /api/crawl 200 in 20ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 21ms
 GET /api/crawl 200 in 20ms
 GET /api/crawl 200 in 17ms
 GET /api/crawl 200 in 18ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 53ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 59ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 19ms
 GET /api/crawl 200 in 22ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 20ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 23ms
 GET /api/crawl 200 in 17ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 17ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 26ms
 GET /api/crawl 200 in 14ms
 ○ Compiling /api/test-product ...
 ✓ Compiled /api/test-product in 1711ms
🧪 Testing product extraction for URL: https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494
🌐 Starting makeAdvancedRequest for: https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494
🔄 Attempt 1/20 - DIRECT - UA: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) Ap...
⏰ Starting request at: 2025-08-14T23:45:31.639Z
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
✅ Response: 200, Content: 180178 chars
✅ Detected valid Barnes & Noble content
📄 Product page content length: 180178 chars
📖 Title found: "I Lived to Tell the Story: A Memoir of Love, Legacy, and Resilience"
📘 ISBN from URL parameter: 9781982173494
📘 Final ISBN result: 9781982173494
📚 Final book format: NOT FOUND
💰 Price selector used: .price -> "$28.99"
💰 Price found: 28.99 (from "$28.99")
💵 Original price found: N/A (from "")
📦 Stock status: IN STOCK (from "")
✍️ Author found: N/A
📝 Description found: N/A (0 chars)
⭐ Rating found: |
Editorial Reviews
✅ Product data extracted: {
  title: 'I Lived to Tell the Story: A Memoir of Love, Legacy, and Resilience',
  isbn: '9781982173494',
  price: 28.99,
  original_price: null,
  book_format: null,
  author: null,
  description: null,
  rating: '|\nEditorial Reviews',
  product_url: 'https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494',
  in_stock: true
}
 GET /api/test-product?url=https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494 200 in 5990ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 18ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 25ms
🧪 Testing product extraction for URL: https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494
🌐 Starting makeAdvancedRequest for: https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494
🔄 Attempt 1/20 - DIRECT - UA: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWeb...
⏰ Starting request at: 2025-08-14T23:45:54.520Z
 GET /api/crawl 200 in 23ms
✅ Response: 200, Content: 179494 chars
✅ Detected valid Barnes & Noble content
📄 Product page content length: 179494 chars
📖 Title found: "I Lived to Tell the Story: A Memoir of Love, Legacy, and Resilience"
📘 ISBN from URL parameter: 9781982173494
📘 Final ISBN result: 9781982173494
📚 Final book format: NOT FOUND
💰 Price selector used: .price -> "$28.99"
💰 Price found: 28.99 (from "$28.99")
💵 Original price found: N/A (from "")
📦 Stock status: IN STOCK (from "")
✍️ Author found: N/A
📝 Description found: N/A (0 chars)
⭐ Rating found: |
Editorial Reviews
✅ Product data extracted: {
  title: 'I Lived to Tell the Story: A Memoir of Love, Legacy, and Resilience',
  isbn: '9781982173494',
  price: 28.99,
  original_price: null,
  book_format: null,
  author: null,
  description: null,
  rating: '|\nEditorial Reviews',
  product_url: 'https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494',
  in_stock: true
}
 GET /api/test-product?url=https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494 200 in 542ms
 GET /api/categories 200 in 16ms
 GET /api/crawl 200 in 18ms
🧪 Testing product extraction for URL: https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494
🌐 Starting makeAdvancedRequest for: https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494
🔄 Attempt 1/20 - DIRECT - UA: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWeb...
⏰ Starting request at: 2025-08-14T23:46:32.709Z
✅ Response: 200, Content: 179632 chars
✅ Detected valid Barnes & Noble content
📄 Product page content length: 179632 chars
📖 Title found: "I Lived to Tell the Story: A Memoir of Love, Legacy, and Resilience"
📘 ISBN from URL parameter: 9781982173494
📘 Final ISBN result: 9781982173494
📚 Final book format: NOT FOUND
💰 Price selector used: .price -> "$28.99"
💰 Price found: 28.99 (from "$28.99")
💵 Original price found: N/A (from "")
📦 Stock status: IN STOCK (from "")
✍️ Author found: N/A
📝 Description found: N/A (0 chars)
⭐ Rating found: |
Editorial Reviews
✅ Product data extracted: {
  title: 'I Lived to Tell the Story: A Memoir of Love, Legacy, and Resilience',
  isbn: '9781982173494',
  price: 28.99,
  original_price: null,
  book_format: null,
  author: null,
  description: null,
  rating: '|\nEditorial Reviews',
  product_url: 'https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494',
  in_stock: true
}
 GET /api/test-product?url=https://www.barnesandnoble.com/w/i-lived-to-tell-the-story-tamika-d-mallory/1146241227?ean=9781982173494 200 in 695ms
 GET / 200 in 181ms
 GET /api/categories 200 in 14ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 30ms
 GET / 200 in 133ms
 GET /api/categories 200 in 24ms
 GET /api/crawl 200 in 36ms
 GET /api/crawl 200 in 17ms
 GET /api/crawl 200 in 22ms
 GET /api/crawl 200 in 18ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 44ms
 GET /api/crawl 200 in 22ms
 GET /api/crawl 200 in 36ms
 GET / 200 in 100ms
 GET /api/categories 200 in 19ms
 GET /api/crawl 200 in 22ms
🌟 POST /api/categories endpoint hit!
📋 Parsing request body...
📋 Action received: crawl
🚀 Starting category crawling...
🔧 Creating BarnesNobleScraper instance...
📡 About to call scraper.crawlCategories()...
🏁 Starting Promise.race...
🚀 Starting category crawl from Barnes & Noble...
📊 Setting progress to crawling_categories...
📊 Crawl progress: {
  category: 'Browse Page',
  currentPage: 1,
  totalPages: 1,
  currentProduct: 0,
  totalProducts: 0,
  successfulProducts: 0,
  failedProducts: 0,
  status: 'crawling_categories'
}
🎯 Target URL: https://www.barnesandnoble.com/h/books/browse
📡 Trying simple direct request first...
✅ Simple direct request successful! Status: 200
✅ Response received: 200, Content: 46115 chars
✅ Detected valid Barnes & Noble content
🔍 Parsing categories from browse page...
📁 Found category: Folklore & Mythology -> https://www.barnesandnoble.com/b/books/literature/folklore-mythology/_/N-29Z8q8Z2geb
📁 Found category: General Fiction -> https://www.barnesandnoble.com/b/books/fiction/_/N-29Z8q8Z10h8
📁 Found category: Graphic Novels & Comics -> https://www.barnesandnoble.com/b/books/graphic-novels-comics/_/N-29Z8q8Zucb
📁 Found category: Historical Fiction -> https://www.barnesandnoble.com/b/books/fiction/historical-fiction/_/N-29Z8q8Z10nf
📁 Found category: Horror -> https://www.barnesandnoble.com/b/books/fiction/horror/_/N-29Z8q8Z1d51
📁 Found category: Literary Fiction -> https://www.barnesandnoble.com/b/books/fiction/literary-fiction/_/N-29Z8q8Z10k1
📁 Found category: Literature -> https://www.barnesandnoble.com/b/books/literature/_/N-29Z8q8Z15v3
📁 Found category: Manga -> https://www.barnesandnoble.com/b/books/graphic-novels-comics-manga/_/N-29Z8q8Z2y35
📁 Found category: Mystery -> https://www.barnesandnoble.com/b/books/mystery-thrillers/_/N-29Z8q8Z16g4
📁 Found category: Poetry -> https://www.barnesandnoble.com/b/books/poetry/_/N-29Z8q8Z1pqh
📁 Found category: Romance -> https://www.barnesandnoble.com/b/books/romance/_/N-29Z8q8Z17y3
📁 Found category: Science Fiction & Fantasy -> https://www.barnesandnoble.com/b/books/science-fiction-fantasy/_/N-29Z8q8Z180l
📁 Found category: Thrillers -> https://www.barnesandnoble.com/b/books/mystery-thrillers/thrillers/_/N-8q8Z29Z2zzl
📁 Found category: Westerns -> https://www.barnesandnoble.com/b/books/fiction/westerns/_/N-29Z8q8Z10j9
📁 Found category: Activity & Game Books -> https://www.barnesandnoble.com/b/books/activity-game-books/_/N-29Z8q8Z1gj3
📁 Found category: African-American Studies -> https://www.barnesandnoble.com/b/books/social-sciences/african-americans/_/N-29Z8q8Z1c3k
📁 Found category: Antiques & Collectibles -> https://www.barnesandnoble.com/b/books/antiques-collectibles/_/N-29Z8q8Zs45
📁 Found category: Art, Architecture & Photography -> https://www.barnesandnoble.com/b/books/art-architecture-photography/_/N-29Z8q8Zs9i
📁 Found category: Astrology & Tarot -> https://www.barnesandnoble.com/b/books/new-age-alternative-beliefs/astrology-divination/_/N-29Z8q8Z1fil
📁 Found category: Bibles & Christianity -> https://www.barnesandnoble.com/b/books/bibles-christianity/_/N-29Z8q8Zsj2
📁 Found category: Biography -> https://www.barnesandnoble.com/b/books/biography/_/N-29Z8q8Zsoc
📁 Found category: Business Books -> https://www.barnesandnoble.com/b/books/business/_/N-29Z8q8Zt82
📁 Found category: Computers -> https://www.barnesandnoble.com/b/books/computers/_/N-29Z8q8Zug4
📁 Found category: Cookbooks, Food & Wine -> https://www.barnesandnoble.com/b/books/cookbooks-food-wine/_/N-29Z8q8Zy3b
📁 Found category: Crafts & Hobbies -> https://www.barnesandnoble.com/b/books/crafts-hobbies/_/N-29Z8q8Z1f43
📁 Found category: Current Affairs & Politics -> https://www.barnesandnoble.com/b/books/current-affairs-politics/_/N-29Z8q8Z16st
📁 Found category: Diet, Health & Fitness -> https://www.barnesandnoble.com/b/books/diet-health-fitness/_/N-29Z8q8Z11ip
📁 Found category: Education -> https://www.barnesandnoble.com/b/books/education/_/N-29Z8q8Zzmg
📁 Found category: Engineering -> https://www.barnesandnoble.com/b/books/science-technology/engineering/_/N-29Z8q8Z2bxy
📁 Found category: European History -> https://www.barnesandnoble.com/b/books/history/european-history/_/N-29Z8q8Z121w
📁 Found category: Fashion & Costume -> https://www.barnesandnoble.com/b/books/art-fashion-decorative-arts-design/fashion-costume/_/N-29Z8q8Zsc5
📁 Found category: Foreign Languages -> https://www.barnesandnoble.com/b/books/reference/foreign-language-study-aids-dictionaries/_/N-29Z8q8Z1gb0
📁 Found category: History -> https://www.barnesandnoble.com/b/books/history/_/N-29Z8q8Z11km
📁 Found category: Home & Garden -> https://www.barnesandnoble.com/b/books/home-garden/_/N-29Z8q8Z12zi
📁 Found category: Humor -> https://www.barnesandnoble.com/b/books/humor/_/N-29Z8q8Z15mo
📁 Found category: Law -> https://www.barnesandnoble.com/b/books/law/_/N-29Z8q8Z1f68
📁 Found category: LGBTQIA+ Studies -> https://www.barnesandnoble.com/b/books/social-sciences/lgbt-studies/_/N-29Z8q8Z190n
📁 Found category: Medicine & Nursing Books -> https://www.barnesandnoble.com/b/books/medicine-nursing/_/N-29Z8q8Z167w
📁 Found category: Military History -> https://www.barnesandnoble.com/b/books/history/military-history/_/N-29Z8q8Z11uw
📁 Found category: Music -> https://www.barnesandnoble.com/b/books/music-film-performing-arts/music/_/N-29Z8q8Z1bl4
📁 Found category: Nature -> https://www.barnesandnoble.com/b/books/nature/_/N-29Z8q8Z16i5
📁 Found category: New Age & Alternative Beliefs -> https://www.barnesandnoble.com/b/books/new-age-alternative-beliefs/_/N-29Z8q8Z1fib
📁 Found category: Parenting & Family -> https://www.barnesandnoble.com/b/books/parenting-family/_/N-29Z8q8Z16ql
📁 Found category: Performing Arts -> https://www.barnesandnoble.com/b/books/music-film-performing-arts/_/N-29Z8q8Zzzc
📁 Found category: Pets -> https://www.barnesandnoble.com/b/books/pets/_/N-29Z8q8Z1fjz
📁 Found category: Philosophy -> https://www.barnesandnoble.com/b/books/philosophy/_/N-29Z8q8Z1fe7
📁 Found category: Psychology -> https://www.barnesandnoble.com/b/books/psychology/_/N-29Z8q8Z1fcc
📁 Found category: Reference -> https://www.barnesandnoble.com/b/books/reference/_/N-29Z8q8Z1g9w
📁 Found category: Religion -> https://www.barnesandnoble.com/b/books/religion/_/N-29Z8q8Z17d6
📁 Found category: Role-Playing & Fantasy Games -> https://www.barnesandnoble.com/b/books/activity-game-books/role-playing-fantasy-games/_/N-29Z8q8Z1gj4
📁 Found category: Science & Technology -> https://www.barnesandnoble.com/b/books/science-technology/_/N-29Z8q8Z184l
📁 Found category: Social Sciences -> https://www.barnesandnoble.com/b/books/social-sciences/_/N-29Z8q8Z18q3
📁 Found category: Sociology -> https://www.barnesandnoble.com/b/books/social-sciences/sociology/_/N-29Z8q8Z197k
📁 Found category: Sports -> https://www.barnesandnoble.com/b/books/sports/_/N-29Z8q8Z19id
📁 Found category: Study Aids & Test Prep -> https://www.barnesandnoble.com/b/books/study-aids-test-prep/_/N-29Z8q8Z1gke
📁 Found category: Transportation -> https://www.barnesandnoble.com/b/books/transportation/_/N-29Z8q8Z2e1z
📁 Found category: Travel -> https://www.barnesandnoble.com/b/books/travel/_/N-29Z8q8Z1ary
📁 Found category: United States History -> https://www.barnesandnoble.com/b/books/history/united-states-history/_/N-29Z8q8Z11n2
📁 Found category: True Crime -> https://www.barnesandnoble.com/b/books/social-sciences/true-crime/_/N-29Z8q8Z2cm6
📁 Found category: Weddings -> https://www.barnesandnoble.com/b/books/self-help-relationships/weddings/_/N-29Z8q8Z1c1r
📁 Found category: Women's Studies -> https://www.barnesandnoble.com/b/books/social-sciences/womens-studies/_/N-29Z8q8Z191e
📁 Found category: Ages 0-2 -> https://www.barnesandnoble.com/b/books/kids/_/N-7Z29Z8q8Ztu1
📁 Found category: Ages 3-5 -> https://www.barnesandnoble.com/b/books/kids/_/N-8Z29Z8q8Ztu1
📁 Found category: Ages 6-8 -> https://www.barnesandnoble.com/b/books/kids/_/N-9Z29Z8q8Ztu1
📁 Found category: Ages 9-12 -> https://www.barnesandnoble.com/b/books/kids/_/N-aZ29Z8q8Ztu1
📁 Found category: Teens & YA -> https://www.barnesandnoble.com/b/books/teens/_/N-29Z8q8Z19r4
📁 Found category: All Kids' Books -> https://www.barnesandnoble.com/b/books/kids/_/N-29Z8q8Ztu1
📁 Found category: B&N Bestsellers -> https://www.barnesandnoble.com/b/books/_/N-1fZ29Z8q8
📁 Found category: Best Books of the Year -> https://www.barnesandnoble.com/b/books/awards/best-books-of-the-year/_/N-29Z8q8Z1qrh
📁 Found category: Book Awards -> https://www.barnesandnoble.com/b/books/awards/_/N-29Z8q8Z1d6q
📁 Found category: Book Club Selections -> https://www.barnesandnoble.com/b/books/awards/book-club-selections/_/N-29Z8q8Z1ql1
📁 Found category: Coming Soon -> https://www.barnesandnoble.com/b/books/_/N-26Z29Z8q8
📁 Found category: Discover Pick of the Month -> https://www.barnesandnoble.com/b/books/awards/barnes-noble-discover-great-new-writers/_/N-29Z8q8Z1qo8
📁 Found category: New Releases -> https://www.barnesandnoble.com/b/books/_/N-1sZ29Z8q8
📁 Found category: Oprah's Book Club -> https://www.barnesandnoble.com/b/books/book-club-selections/oprahs-book-club/_/N-29Z8q8Z1qld
📁 Found category: Large Print -> https://www.barnesandnoble.com/b/large-print/books/_/N-1pu1Z29Z8q8
🎉 Total categories found: 76
❌ Error saving category Folklore & Mythology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category General Fiction: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Graphic Novels & Comics: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Historical Fiction: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Horror: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Literary Fiction: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Literature: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Manga: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Mystery: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Poetry: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Romance: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Science Fiction & Fantasy: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Thrillers: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Westerns: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Activity & Game Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category African-American Studies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Antiques & Collectibles: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Art, Architecture & Photography: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Astrology & Tarot: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Bibles & Christianity: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Biography: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Business Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Computers: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Cookbooks, Food & Wine: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Crafts & Hobbies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Current Affairs & Politics: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Diet, Health & Fitness: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Education: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Engineering: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category European History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Fashion & Costume: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Foreign Languages: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Home & Garden: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Humor: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Law: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category LGBTQIA+ Studies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Medicine & Nursing Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Military History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Music: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Nature: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category New Age & Alternative Beliefs: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Parenting & Family: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Performing Arts: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Pets: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Philosophy: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Psychology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Reference: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Religion: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Role-Playing & Fantasy Games: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Science & Technology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Social Sciences: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Sociology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Sports: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Study Aids & Test Prep: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Transportation: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Travel: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category United States History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category True Crime: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Weddings: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Women's Studies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 0-2: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 3-5: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 6-8: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 9-12: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Teens & YA: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category All Kids' Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category B&N Bestsellers: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Best Books of the Year: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Book Awards: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Book Club Selections: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Coming Soon: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Discover Pick of the Month: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category New Releases: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Oprah's Book Club: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Large Print: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
📊 Crawl progress: {
  category: 'Browse Page',
  currentPage: 1,
  totalPages: 1,
  currentProduct: 0,
  totalProducts: 0,
  successfulProducts: 0,
  failedProducts: 0,
  status: 'completed'
}
✅ Successfully crawled 76 categories
✅ Successfully found 76 categories: [
  'Folklore & Mythology',
  'General Fiction',
  'Graphic Novels & Comics',
  'Historical Fiction',
  'Horror',
  'Literary Fiction',
  'Literature',
  'Manga',
  'Mystery',
  'Poetry',
  'Romance',
  'Science Fiction & Fantasy',
  'Thrillers',
  'Westerns',
  'Activity & Game Books',
  'African-American Studies',
  'Antiques & Collectibles',
  'Art, Architecture & Photography',
  'Astrology & Tarot',
  'Bibles & Christianity',
  'Biography',
  'Business Books',
  'Computers',
  'Cookbooks, Food & Wine',
  'Crafts & Hobbies',
  'Current Affairs & Politics',
  'Diet, Health & Fitness',
  'Education',
  'Engineering',
  'European History',
  'Fashion & Costume',
  'Foreign Languages',
  'History',
  'Home & Garden',
  'Humor',
  'Law',
  'LGBTQIA+ Studies',
  'Medicine & Nursing Books',
  'Military History',
  'Music',
  'Nature',
  'New Age & Alternative Beliefs',
  'Parenting & Family',
  'Performing Arts',
  'Pets',
  'Philosophy',
  'Psychology',
  'Reference',
  'Religion',
  'Role-Playing & Fantasy Games',
  'Science & Technology',
  'Social Sciences',
  'Sociology',
  'Sports',
  'Study Aids & Test Prep',
  'Transportation',
  'Travel',
  'United States History',
  'True Crime',
  'Weddings',
  "Women's Studies",
  'Ages 0-2',
  'Ages 3-5',
  'Ages 6-8',
  'Ages 9-12',
  'Teens & YA',
  "All Kids' Books",
  'B&N Bestsellers',
  'Best Books of the Year',
  'Book Awards',
  'Book Club Selections',
  'Coming Soon',
  'Discover Pick of the Month',
  'New Releases',
  "Oprah's Book Club",
  'Large Print'
]
 POST /api/categories 200 in 5053ms
 GET /api/crawl 200 in 59ms
 GET /api/crawl 200 in 67ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 31ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/categories 200 in 17ms
 GET /api/crawl 200 in 76ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 24ms
 GET /api/crawl 200 in 21ms
 GET /api/crawl 200 in 24ms
 GET /api/crawl 200 in 26ms
 GET /api/crawl 200 in 24ms
🌟 POST /api/categories endpoint hit!
📋 Parsing request body...
📋 Action received: crawl
🚀 Starting category crawling...
🔧 Creating BarnesNobleScraper instance...
📡 About to call scraper.crawlCategories()...
🏁 Starting Promise.race...
🚀 Starting category crawl from Barnes & Noble...
📊 Setting progress to crawling_categories...
📊 Crawl progress: {
  category: 'Browse Page',
  currentPage: 1,
  totalPages: 1,
  currentProduct: 0,
  totalProducts: 0,
  successfulProducts: 0,
  failedProducts: 0,
  status: 'crawling_categories'
}
🎯 Target URL: https://www.barnesandnoble.com/h/books/browse
📡 Trying simple direct request first...
✅ Simple direct request successful! Status: 200
✅ Response received: 200, Content: 46115 chars
✅ Detected valid Barnes & Noble content
🔍 Parsing categories from browse page...
📁 Found category: Folklore & Mythology -> https://www.barnesandnoble.com/b/books/literature/folklore-mythology/_/N-29Z8q8Z2geb
📁 Found category: General Fiction -> https://www.barnesandnoble.com/b/books/fiction/_/N-29Z8q8Z10h8
📁 Found category: Graphic Novels & Comics -> https://www.barnesandnoble.com/b/books/graphic-novels-comics/_/N-29Z8q8Zucb
📁 Found category: Historical Fiction -> https://www.barnesandnoble.com/b/books/fiction/historical-fiction/_/N-29Z8q8Z10nf
📁 Found category: Horror -> https://www.barnesandnoble.com/b/books/fiction/horror/_/N-29Z8q8Z1d51
📁 Found category: Literary Fiction -> https://www.barnesandnoble.com/b/books/fiction/literary-fiction/_/N-29Z8q8Z10k1
📁 Found category: Literature -> https://www.barnesandnoble.com/b/books/literature/_/N-29Z8q8Z15v3
📁 Found category: Manga -> https://www.barnesandnoble.com/b/books/graphic-novels-comics-manga/_/N-29Z8q8Z2y35
📁 Found category: Mystery -> https://www.barnesandnoble.com/b/books/mystery-thrillers/_/N-29Z8q8Z16g4
📁 Found category: Poetry -> https://www.barnesandnoble.com/b/books/poetry/_/N-29Z8q8Z1pqh
📁 Found category: Romance -> https://www.barnesandnoble.com/b/books/romance/_/N-29Z8q8Z17y3
📁 Found category: Science Fiction & Fantasy -> https://www.barnesandnoble.com/b/books/science-fiction-fantasy/_/N-29Z8q8Z180l
📁 Found category: Thrillers -> https://www.barnesandnoble.com/b/books/mystery-thrillers/thrillers/_/N-8q8Z29Z2zzl
📁 Found category: Westerns -> https://www.barnesandnoble.com/b/books/fiction/westerns/_/N-29Z8q8Z10j9
📁 Found category: Activity & Game Books -> https://www.barnesandnoble.com/b/books/activity-game-books/_/N-29Z8q8Z1gj3
📁 Found category: African-American Studies -> https://www.barnesandnoble.com/b/books/social-sciences/african-americans/_/N-29Z8q8Z1c3k
📁 Found category: Antiques & Collectibles -> https://www.barnesandnoble.com/b/books/antiques-collectibles/_/N-29Z8q8Zs45
📁 Found category: Art, Architecture & Photography -> https://www.barnesandnoble.com/b/books/art-architecture-photography/_/N-29Z8q8Zs9i
📁 Found category: Astrology & Tarot -> https://www.barnesandnoble.com/b/books/new-age-alternative-beliefs/astrology-divination/_/N-29Z8q8Z1fil
📁 Found category: Bibles & Christianity -> https://www.barnesandnoble.com/b/books/bibles-christianity/_/N-29Z8q8Zsj2
📁 Found category: Biography -> https://www.barnesandnoble.com/b/books/biography/_/N-29Z8q8Zsoc
📁 Found category: Business Books -> https://www.barnesandnoble.com/b/books/business/_/N-29Z8q8Zt82
📁 Found category: Computers -> https://www.barnesandnoble.com/b/books/computers/_/N-29Z8q8Zug4
📁 Found category: Cookbooks, Food & Wine -> https://www.barnesandnoble.com/b/books/cookbooks-food-wine/_/N-29Z8q8Zy3b
📁 Found category: Crafts & Hobbies -> https://www.barnesandnoble.com/b/books/crafts-hobbies/_/N-29Z8q8Z1f43
📁 Found category: Current Affairs & Politics -> https://www.barnesandnoble.com/b/books/current-affairs-politics/_/N-29Z8q8Z16st
📁 Found category: Diet, Health & Fitness -> https://www.barnesandnoble.com/b/books/diet-health-fitness/_/N-29Z8q8Z11ip
📁 Found category: Education -> https://www.barnesandnoble.com/b/books/education/_/N-29Z8q8Zzmg
📁 Found category: Engineering -> https://www.barnesandnoble.com/b/books/science-technology/engineering/_/N-29Z8q8Z2bxy
📁 Found category: European History -> https://www.barnesandnoble.com/b/books/history/european-history/_/N-29Z8q8Z121w
📁 Found category: Fashion & Costume -> https://www.barnesandnoble.com/b/books/art-fashion-decorative-arts-design/fashion-costume/_/N-29Z8q8Zsc5
📁 Found category: Foreign Languages -> https://www.barnesandnoble.com/b/books/reference/foreign-language-study-aids-dictionaries/_/N-29Z8q8Z1gb0
📁 Found category: History -> https://www.barnesandnoble.com/b/books/history/_/N-29Z8q8Z11km
📁 Found category: Home & Garden -> https://www.barnesandnoble.com/b/books/home-garden/_/N-29Z8q8Z12zi
📁 Found category: Humor -> https://www.barnesandnoble.com/b/books/humor/_/N-29Z8q8Z15mo
📁 Found category: Law -> https://www.barnesandnoble.com/b/books/law/_/N-29Z8q8Z1f68
📁 Found category: LGBTQIA+ Studies -> https://www.barnesandnoble.com/b/books/social-sciences/lgbt-studies/_/N-29Z8q8Z190n
📁 Found category: Medicine & Nursing Books -> https://www.barnesandnoble.com/b/books/medicine-nursing/_/N-29Z8q8Z167w
📁 Found category: Military History -> https://www.barnesandnoble.com/b/books/history/military-history/_/N-29Z8q8Z11uw
📁 Found category: Music -> https://www.barnesandnoble.com/b/books/music-film-performing-arts/music/_/N-29Z8q8Z1bl4
📁 Found category: Nature -> https://www.barnesandnoble.com/b/books/nature/_/N-29Z8q8Z16i5
📁 Found category: New Age & Alternative Beliefs -> https://www.barnesandnoble.com/b/books/new-age-alternative-beliefs/_/N-29Z8q8Z1fib
📁 Found category: Parenting & Family -> https://www.barnesandnoble.com/b/books/parenting-family/_/N-29Z8q8Z16ql
📁 Found category: Performing Arts -> https://www.barnesandnoble.com/b/books/music-film-performing-arts/_/N-29Z8q8Zzzc
📁 Found category: Pets -> https://www.barnesandnoble.com/b/books/pets/_/N-29Z8q8Z1fjz
📁 Found category: Philosophy -> https://www.barnesandnoble.com/b/books/philosophy/_/N-29Z8q8Z1fe7
📁 Found category: Psychology -> https://www.barnesandnoble.com/b/books/psychology/_/N-29Z8q8Z1fcc
📁 Found category: Reference -> https://www.barnesandnoble.com/b/books/reference/_/N-29Z8q8Z1g9w
📁 Found category: Religion -> https://www.barnesandnoble.com/b/books/religion/_/N-29Z8q8Z17d6
📁 Found category: Role-Playing & Fantasy Games -> https://www.barnesandnoble.com/b/books/activity-game-books/role-playing-fantasy-games/_/N-29Z8q8Z1gj4
📁 Found category: Science & Technology -> https://www.barnesandnoble.com/b/books/science-technology/_/N-29Z8q8Z184l
📁 Found category: Social Sciences -> https://www.barnesandnoble.com/b/books/social-sciences/_/N-29Z8q8Z18q3
📁 Found category: Sociology -> https://www.barnesandnoble.com/b/books/social-sciences/sociology/_/N-29Z8q8Z197k
📁 Found category: Sports -> https://www.barnesandnoble.com/b/books/sports/_/N-29Z8q8Z19id
📁 Found category: Study Aids & Test Prep -> https://www.barnesandnoble.com/b/books/study-aids-test-prep/_/N-29Z8q8Z1gke
📁 Found category: Transportation -> https://www.barnesandnoble.com/b/books/transportation/_/N-29Z8q8Z2e1z
📁 Found category: Travel -> https://www.barnesandnoble.com/b/books/travel/_/N-29Z8q8Z1ary
📁 Found category: United States History -> https://www.barnesandnoble.com/b/books/history/united-states-history/_/N-29Z8q8Z11n2
📁 Found category: True Crime -> https://www.barnesandnoble.com/b/books/social-sciences/true-crime/_/N-29Z8q8Z2cm6
📁 Found category: Weddings -> https://www.barnesandnoble.com/b/books/self-help-relationships/weddings/_/N-29Z8q8Z1c1r
📁 Found category: Women's Studies -> https://www.barnesandnoble.com/b/books/social-sciences/womens-studies/_/N-29Z8q8Z191e
📁 Found category: Ages 0-2 -> https://www.barnesandnoble.com/b/books/kids/_/N-7Z29Z8q8Ztu1
📁 Found category: Ages 3-5 -> https://www.barnesandnoble.com/b/books/kids/_/N-8Z29Z8q8Ztu1
📁 Found category: Ages 6-8 -> https://www.barnesandnoble.com/b/books/kids/_/N-9Z29Z8q8Ztu1
📁 Found category: Ages 9-12 -> https://www.barnesandnoble.com/b/books/kids/_/N-aZ29Z8q8Ztu1
📁 Found category: Teens & YA -> https://www.barnesandnoble.com/b/books/teens/_/N-29Z8q8Z19r4
📁 Found category: All Kids' Books -> https://www.barnesandnoble.com/b/books/kids/_/N-29Z8q8Ztu1
📁 Found category: B&N Bestsellers -> https://www.barnesandnoble.com/b/books/_/N-1fZ29Z8q8
📁 Found category: Best Books of the Year -> https://www.barnesandnoble.com/b/books/awards/best-books-of-the-year/_/N-29Z8q8Z1qrh
📁 Found category: Book Awards -> https://www.barnesandnoble.com/b/books/awards/_/N-29Z8q8Z1d6q
📁 Found category: Book Club Selections -> https://www.barnesandnoble.com/b/books/awards/book-club-selections/_/N-29Z8q8Z1ql1
📁 Found category: Coming Soon -> https://www.barnesandnoble.com/b/books/_/N-26Z29Z8q8
📁 Found category: Discover Pick of the Month -> https://www.barnesandnoble.com/b/books/awards/barnes-noble-discover-great-new-writers/_/N-29Z8q8Z1qo8
📁 Found category: New Releases -> https://www.barnesandnoble.com/b/books/_/N-1sZ29Z8q8
📁 Found category: Oprah's Book Club -> https://www.barnesandnoble.com/b/books/book-club-selections/oprahs-book-club/_/N-29Z8q8Z1qld
📁 Found category: Large Print -> https://www.barnesandnoble.com/b/large-print/books/_/N-1pu1Z29Z8q8
🎉 Total categories found: 76
❌ Error saving category Folklore & Mythology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category General Fiction: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Graphic Novels & Comics: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Historical Fiction: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Horror: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Literary Fiction: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Literature: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Manga: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Mystery: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Poetry: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Romance: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Science Fiction & Fantasy: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Thrillers: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Westerns: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Activity & Game Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category African-American Studies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Antiques & Collectibles: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Art, Architecture & Photography: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Astrology & Tarot: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Bibles & Christianity: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Biography: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Business Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Computers: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Cookbooks, Food & Wine: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Crafts & Hobbies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Current Affairs & Politics: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Diet, Health & Fitness: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Education: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Engineering: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category European History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Fashion & Costume: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Foreign Languages: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Home & Garden: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Humor: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Law: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category LGBTQIA+ Studies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Medicine & Nursing Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Military History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Music: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Nature: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category New Age & Alternative Beliefs: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Parenting & Family: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Performing Arts: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Pets: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Philosophy: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Psychology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Reference: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Religion: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Role-Playing & Fantasy Games: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Science & Technology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Social Sciences: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Sociology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Sports: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Study Aids & Test Prep: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Transportation: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Travel: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category United States History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category True Crime: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Weddings: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Women's Studies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 0-2: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 3-5: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 6-8: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 9-12: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Teens & YA: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category All Kids' Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category B&N Bestsellers: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Best Books of the Year: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Book Awards: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Book Club Selections: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Coming Soon: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Discover Pick of the Month: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category New Releases: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Oprah's Book Club: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Large Print: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
📊 Crawl progress: {
  category: 'Browse Page',
  currentPage: 1,
  totalPages: 1,
  currentProduct: 0,
  totalProducts: 0,
  successfulProducts: 0,
  failedProducts: 0,
  status: 'completed'
}
✅ Successfully crawled 76 categories
✅ Successfully found 76 categories: [
  'Folklore & Mythology',
  'General Fiction',
  'Graphic Novels & Comics',
  'Historical Fiction',
  'Horror',
  'Literary Fiction',
  'Literature',
  'Manga',
  'Mystery',
  'Poetry',
  'Romance',
  'Science Fiction & Fantasy',
  'Thrillers',
  'Westerns',
  'Activity & Game Books',
  'African-American Studies',
  'Antiques & Collectibles',
  'Art, Architecture & Photography',
  'Astrology & Tarot',
  'Bibles & Christianity',
  'Biography',
  'Business Books',
  'Computers',
  'Cookbooks, Food & Wine',
  'Crafts & Hobbies',
  'Current Affairs & Politics',
  'Diet, Health & Fitness',
  'Education',
  'Engineering',
  'European History',
  'Fashion & Costume',
  'Foreign Languages',
  'History',
  'Home & Garden',
  'Humor',
  'Law',
  'LGBTQIA+ Studies',
  'Medicine & Nursing Books',
  'Military History',
  'Music',
  'Nature',
  'New Age & Alternative Beliefs',
  'Parenting & Family',
  'Performing Arts',
  'Pets',
  'Philosophy',
  'Psychology',
  'Reference',
  'Religion',
  'Role-Playing & Fantasy Games',
  'Science & Technology',
  'Social Sciences',
  'Sociology',
  'Sports',
  'Study Aids & Test Prep',
  'Transportation',
  'Travel',
  'United States History',
  'True Crime',
  'Weddings',
  "Women's Studies",
  'Ages 0-2',
  'Ages 3-5',
  'Ages 6-8',
  'Ages 9-12',
  'Teens & YA',
  "All Kids' Books",
  'B&N Bestsellers',
  'Best Books of the Year',
  'Book Awards',
  'Book Club Selections',
  'Coming Soon',
  'Discover Pick of the Month',
  'New Releases',
  "Oprah's Book Club",
  'Large Print'
]
 POST /api/categories 200 in 4775ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/categories 200 in 13ms
 GET /api/crawl 200 in 25ms
 GET /api/crawl 200 in 62ms
 GET /api/crawl 200 in 32ms
 GET /api/crawl 200 in 31ms
 GET /api/crawl 200 in 30ms
🌟 POST /api/categories endpoint hit!
📋 Parsing request body...
📋 Action received: crawl
🚀 Starting category crawling...
🔧 Creating BarnesNobleScraper instance...
📡 About to call scraper.crawlCategories()...
🏁 Starting Promise.race...
🚀 Starting category crawl from Barnes & Noble...
📊 Setting progress to crawling_categories...
📊 Crawl progress: {
  category: 'Browse Page',
  currentPage: 1,
  totalPages: 1,
  currentProduct: 0,
  totalProducts: 0,
  successfulProducts: 0,
  failedProducts: 0,
  status: 'crawling_categories'
}
🎯 Target URL: https://www.barnesandnoble.com/h/books/browse
📡 Trying simple direct request first...
✅ Simple direct request successful! Status: 200
✅ Response received: 200, Content: 46115 chars
✅ Detected valid Barnes & Noble content
🔍 Parsing categories from browse page...
📁 Found category: Folklore & Mythology -> https://www.barnesandnoble.com/b/books/literature/folklore-mythology/_/N-29Z8q8Z2geb
📁 Found category: General Fiction -> https://www.barnesandnoble.com/b/books/fiction/_/N-29Z8q8Z10h8
📁 Found category: Graphic Novels & Comics -> https://www.barnesandnoble.com/b/books/graphic-novels-comics/_/N-29Z8q8Zucb
📁 Found category: Historical Fiction -> https://www.barnesandnoble.com/b/books/fiction/historical-fiction/_/N-29Z8q8Z10nf
📁 Found category: Horror -> https://www.barnesandnoble.com/b/books/fiction/horror/_/N-29Z8q8Z1d51
📁 Found category: Literary Fiction -> https://www.barnesandnoble.com/b/books/fiction/literary-fiction/_/N-29Z8q8Z10k1
📁 Found category: Literature -> https://www.barnesandnoble.com/b/books/literature/_/N-29Z8q8Z15v3
📁 Found category: Manga -> https://www.barnesandnoble.com/b/books/graphic-novels-comics-manga/_/N-29Z8q8Z2y35
📁 Found category: Mystery -> https://www.barnesandnoble.com/b/books/mystery-thrillers/_/N-29Z8q8Z16g4
📁 Found category: Poetry -> https://www.barnesandnoble.com/b/books/poetry/_/N-29Z8q8Z1pqh
📁 Found category: Romance -> https://www.barnesandnoble.com/b/books/romance/_/N-29Z8q8Z17y3
📁 Found category: Science Fiction & Fantasy -> https://www.barnesandnoble.com/b/books/science-fiction-fantasy/_/N-29Z8q8Z180l
📁 Found category: Thrillers -> https://www.barnesandnoble.com/b/books/mystery-thrillers/thrillers/_/N-8q8Z29Z2zzl
📁 Found category: Westerns -> https://www.barnesandnoble.com/b/books/fiction/westerns/_/N-29Z8q8Z10j9
📁 Found category: Activity & Game Books -> https://www.barnesandnoble.com/b/books/activity-game-books/_/N-29Z8q8Z1gj3
📁 Found category: African-American Studies -> https://www.barnesandnoble.com/b/books/social-sciences/african-americans/_/N-29Z8q8Z1c3k
📁 Found category: Antiques & Collectibles -> https://www.barnesandnoble.com/b/books/antiques-collectibles/_/N-29Z8q8Zs45
📁 Found category: Art, Architecture & Photography -> https://www.barnesandnoble.com/b/books/art-architecture-photography/_/N-29Z8q8Zs9i
📁 Found category: Astrology & Tarot -> https://www.barnesandnoble.com/b/books/new-age-alternative-beliefs/astrology-divination/_/N-29Z8q8Z1fil
📁 Found category: Bibles & Christianity -> https://www.barnesandnoble.com/b/books/bibles-christianity/_/N-29Z8q8Zsj2
📁 Found category: Biography -> https://www.barnesandnoble.com/b/books/biography/_/N-29Z8q8Zsoc
📁 Found category: Business Books -> https://www.barnesandnoble.com/b/books/business/_/N-29Z8q8Zt82
📁 Found category: Computers -> https://www.barnesandnoble.com/b/books/computers/_/N-29Z8q8Zug4
📁 Found category: Cookbooks, Food & Wine -> https://www.barnesandnoble.com/b/books/cookbooks-food-wine/_/N-29Z8q8Zy3b
📁 Found category: Crafts & Hobbies -> https://www.barnesandnoble.com/b/books/crafts-hobbies/_/N-29Z8q8Z1f43
📁 Found category: Current Affairs & Politics -> https://www.barnesandnoble.com/b/books/current-affairs-politics/_/N-29Z8q8Z16st
📁 Found category: Diet, Health & Fitness -> https://www.barnesandnoble.com/b/books/diet-health-fitness/_/N-29Z8q8Z11ip
📁 Found category: Education -> https://www.barnesandnoble.com/b/books/education/_/N-29Z8q8Zzmg
📁 Found category: Engineering -> https://www.barnesandnoble.com/b/books/science-technology/engineering/_/N-29Z8q8Z2bxy
📁 Found category: European History -> https://www.barnesandnoble.com/b/books/history/european-history/_/N-29Z8q8Z121w
📁 Found category: Fashion & Costume -> https://www.barnesandnoble.com/b/books/art-fashion-decorative-arts-design/fashion-costume/_/N-29Z8q8Zsc5
📁 Found category: Foreign Languages -> https://www.barnesandnoble.com/b/books/reference/foreign-language-study-aids-dictionaries/_/N-29Z8q8Z1gb0
📁 Found category: History -> https://www.barnesandnoble.com/b/books/history/_/N-29Z8q8Z11km
📁 Found category: Home & Garden -> https://www.barnesandnoble.com/b/books/home-garden/_/N-29Z8q8Z12zi
📁 Found category: Humor -> https://www.barnesandnoble.com/b/books/humor/_/N-29Z8q8Z15mo
📁 Found category: Law -> https://www.barnesandnoble.com/b/books/law/_/N-29Z8q8Z1f68
📁 Found category: LGBTQIA+ Studies -> https://www.barnesandnoble.com/b/books/social-sciences/lgbt-studies/_/N-29Z8q8Z190n
📁 Found category: Medicine & Nursing Books -> https://www.barnesandnoble.com/b/books/medicine-nursing/_/N-29Z8q8Z167w
📁 Found category: Military History -> https://www.barnesandnoble.com/b/books/history/military-history/_/N-29Z8q8Z11uw
📁 Found category: Music -> https://www.barnesandnoble.com/b/books/music-film-performing-arts/music/_/N-29Z8q8Z1bl4
📁 Found category: Nature -> https://www.barnesandnoble.com/b/books/nature/_/N-29Z8q8Z16i5
📁 Found category: New Age & Alternative Beliefs -> https://www.barnesandnoble.com/b/books/new-age-alternative-beliefs/_/N-29Z8q8Z1fib
📁 Found category: Parenting & Family -> https://www.barnesandnoble.com/b/books/parenting-family/_/N-29Z8q8Z16ql
📁 Found category: Performing Arts -> https://www.barnesandnoble.com/b/books/music-film-performing-arts/_/N-29Z8q8Zzzc
📁 Found category: Pets -> https://www.barnesandnoble.com/b/books/pets/_/N-29Z8q8Z1fjz
📁 Found category: Philosophy -> https://www.barnesandnoble.com/b/books/philosophy/_/N-29Z8q8Z1fe7
📁 Found category: Psychology -> https://www.barnesandnoble.com/b/books/psychology/_/N-29Z8q8Z1fcc
📁 Found category: Reference -> https://www.barnesandnoble.com/b/books/reference/_/N-29Z8q8Z1g9w
📁 Found category: Religion -> https://www.barnesandnoble.com/b/books/religion/_/N-29Z8q8Z17d6
📁 Found category: Role-Playing & Fantasy Games -> https://www.barnesandnoble.com/b/books/activity-game-books/role-playing-fantasy-games/_/N-29Z8q8Z1gj4
📁 Found category: Science & Technology -> https://www.barnesandnoble.com/b/books/science-technology/_/N-29Z8q8Z184l
📁 Found category: Social Sciences -> https://www.barnesandnoble.com/b/books/social-sciences/_/N-29Z8q8Z18q3
📁 Found category: Sociology -> https://www.barnesandnoble.com/b/books/social-sciences/sociology/_/N-29Z8q8Z197k
📁 Found category: Sports -> https://www.barnesandnoble.com/b/books/sports/_/N-29Z8q8Z19id
📁 Found category: Study Aids & Test Prep -> https://www.barnesandnoble.com/b/books/study-aids-test-prep/_/N-29Z8q8Z1gke
📁 Found category: Transportation -> https://www.barnesandnoble.com/b/books/transportation/_/N-29Z8q8Z2e1z
📁 Found category: Travel -> https://www.barnesandnoble.com/b/books/travel/_/N-29Z8q8Z1ary
📁 Found category: United States History -> https://www.barnesandnoble.com/b/books/history/united-states-history/_/N-29Z8q8Z11n2
📁 Found category: True Crime -> https://www.barnesandnoble.com/b/books/social-sciences/true-crime/_/N-29Z8q8Z2cm6
📁 Found category: Weddings -> https://www.barnesandnoble.com/b/books/self-help-relationships/weddings/_/N-29Z8q8Z1c1r
📁 Found category: Women's Studies -> https://www.barnesandnoble.com/b/books/social-sciences/womens-studies/_/N-29Z8q8Z191e
📁 Found category: Ages 0-2 -> https://www.barnesandnoble.com/b/books/kids/_/N-7Z29Z8q8Ztu1
📁 Found category: Ages 3-5 -> https://www.barnesandnoble.com/b/books/kids/_/N-8Z29Z8q8Ztu1
📁 Found category: Ages 6-8 -> https://www.barnesandnoble.com/b/books/kids/_/N-9Z29Z8q8Ztu1
📁 Found category: Ages 9-12 -> https://www.barnesandnoble.com/b/books/kids/_/N-aZ29Z8q8Ztu1
📁 Found category: Teens & YA -> https://www.barnesandnoble.com/b/books/teens/_/N-29Z8q8Z19r4
📁 Found category: All Kids' Books -> https://www.barnesandnoble.com/b/books/kids/_/N-29Z8q8Ztu1
📁 Found category: B&N Bestsellers -> https://www.barnesandnoble.com/b/books/_/N-1fZ29Z8q8
📁 Found category: Best Books of the Year -> https://www.barnesandnoble.com/b/books/awards/best-books-of-the-year/_/N-29Z8q8Z1qrh
📁 Found category: Book Awards -> https://www.barnesandnoble.com/b/books/awards/_/N-29Z8q8Z1d6q
📁 Found category: Book Club Selections -> https://www.barnesandnoble.com/b/books/awards/book-club-selections/_/N-29Z8q8Z1ql1
📁 Found category: Coming Soon -> https://www.barnesandnoble.com/b/books/_/N-26Z29Z8q8
📁 Found category: Discover Pick of the Month -> https://www.barnesandnoble.com/b/books/awards/barnes-noble-discover-great-new-writers/_/N-29Z8q8Z1qo8
📁 Found category: New Releases -> https://www.barnesandnoble.com/b/books/_/N-1sZ29Z8q8
📁 Found category: Oprah's Book Club -> https://www.barnesandnoble.com/b/books/book-club-selections/oprahs-book-club/_/N-29Z8q8Z1qld
📁 Found category: Large Print -> https://www.barnesandnoble.com/b/large-print/books/_/N-1pu1Z29Z8q8
🎉 Total categories found: 76
❌ Error saving category Folklore & Mythology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category General Fiction: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Graphic Novels & Comics: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Historical Fiction: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Horror: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Literary Fiction: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Literature: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Manga: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Mystery: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Poetry: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Romance: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Science Fiction & Fantasy: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Thrillers: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Westerns: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Activity & Game Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category African-American Studies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Antiques & Collectibles: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Art, Architecture & Photography: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Astrology & Tarot: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Bibles & Christianity: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Biography: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Business Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Computers: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Cookbooks, Food & Wine: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Crafts & Hobbies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Current Affairs & Politics: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Diet, Health & Fitness: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Education: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Engineering: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category European History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Fashion & Costume: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Foreign Languages: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Home & Garden: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Humor: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Law: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category LGBTQIA+ Studies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Medicine & Nursing Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Military History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Music: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Nature: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category New Age & Alternative Beliefs: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Parenting & Family: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Performing Arts: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Pets: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Philosophy: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Psychology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Reference: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Religion: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Role-Playing & Fantasy Games: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Science & Technology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Social Sciences: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Sociology: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Sports: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Study Aids & Test Prep: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Transportation: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Travel: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category United States History: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category True Crime: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Weddings: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Women's Studies: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 0-2: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 3-5: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 6-8: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Ages 9-12: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Teens & YA: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category All Kids' Books: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category B&N Bestsellers: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Best Books of the Year: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Book Awards: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Book Club Selections: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Coming Soon: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Discover Pick of the Month: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category New Releases: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Oprah's Book Club: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
❌ Error saving category Large Print: SqliteError: attempt to write a readonly database
    at BarnesNobleScraper.crawlCategories (src/lib/scraper.ts:437:35)
    at async POST (src/app/api/categories/route.ts:47:27)
  435 |       for (const category of categories) {
  436 |         try {
> 437 |           categoryService.insert().run(
      |                                   ^
  438 |             category.name,
  439 |             category.url,
  440 |             null, // bestseller_url will be filled later {
  code: 'SQLITE_READONLY_DBMOVED'
}
📊 Crawl progress: {
  category: 'Browse Page',
  currentPage: 1,
  totalPages: 1,
  currentProduct: 0,
  totalProducts: 0,
  successfulProducts: 0,
  failedProducts: 0,
  status: 'completed'
}
✅ Successfully crawled 76 categories
✅ Successfully found 76 categories: [
  'Folklore & Mythology',
  'General Fiction',
  'Graphic Novels & Comics',
  'Historical Fiction',
  'Horror',
  'Literary Fiction',
  'Literature',
  'Manga',
  'Mystery',
  'Poetry',
  'Romance',
  'Science Fiction & Fantasy',
  'Thrillers',
  'Westerns',
  'Activity & Game Books',
  'African-American Studies',
  'Antiques & Collectibles',
  'Art, Architecture & Photography',
  'Astrology & Tarot',
  'Bibles & Christianity',
  'Biography',
  'Business Books',
  'Computers',
  'Cookbooks, Food & Wine',
  'Crafts & Hobbies',
  'Current Affairs & Politics',
  'Diet, Health & Fitness',
  'Education',
  'Engineering',
  'European History',
  'Fashion & Costume',
  'Foreign Languages',
  'History',
  'Home & Garden',
  'Humor',
  'Law',
  'LGBTQIA+ Studies',
  'Medicine & Nursing Books',
  'Military History',
  'Music',
  'Nature',
  'New Age & Alternative Beliefs',
  'Parenting & Family',
  'Performing Arts',
  'Pets',
  'Philosophy',
  'Psychology',
  'Reference',
  'Religion',
  'Role-Playing & Fantasy Games',
  'Science & Technology',
  'Social Sciences',
  'Sociology',
  'Sports',
  'Study Aids & Test Prep',
  'Transportation',
  'Travel',
  'United States History',
  'True Crime',
  'Weddings',
  "Women's Studies",
  'Ages 0-2',
  'Ages 3-5',
  'Ages 6-8',
  'Ages 9-12',
  'Teens & YA',
  "All Kids' Books",
  'B&N Bestsellers',
  'Best Books of the Year',
  'Book Awards',
  'Book Club Selections',
  'Coming Soon',
  'Discover Pick of the Month',
  'New Releases',
  "Oprah's Book Club",
  'Large Print'
]
 POST /api/categories 200 in 4872ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/categories 200 in 24ms
 GET /api/crawl 200 in 76ms
 GET /api/crawl 200 in 25ms
 GET /api/crawl 200 in 35ms
 GET /api/crawl 200 in 27ms
 GET /api/crawl 200 in 298ms
 GET / 200 in 104ms
 GET / 200 in 289ms
 GET /api/categories 200 in 136ms
 GET /api/crawl 200 in 127ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 21ms
 GET /api/crawl 200 in 16ms
⏰ Timeout reached after 60 seconds!
 ○ Compiling /api/test-links ...
 ✓ Compiled /api/test-links in 1687ms
🔗 Testing product link extraction for URL: https://www.barnesandnoble.com/b/books/social-sciences/african-americans/_/N-1fZ29Z8q8Z1c3k?page=9
🌐 Starting makeAdvancedRequest for: https://www.barnesandnoble.com/b/books/social-sciences/african-americans/_/N-1fZ29Z8q8Z1c3k?page=9
🔄 Attempt 1/20 - DIRECT - UA: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:119.0...
⏰ Starting request at: 2025-08-14T23:49:00.652Z
 GET /api/crawl 200 in 17ms
 GET /api/crawl 200 in 19ms
✅ Response: 200, Content: 358874 chars
✅ Detected valid Barnes & Noble content
📄 Page content length: 358874 chars
   a[href*="/w/"][href*="?ean="]: 178 total matches
      Valid product links found: 20
      Duplicates skipped: 158
   a[href^="/w/"]: 178 total matches
      Valid product links found: 0
      Duplicates skipped: 178
   a[href*="/w/"]: 178 total matches
      Valid product links found: 0
      Duplicates skipped: 178
✅ Analysis complete: 20 unique product links found
 GET /api/test-links?url=https://www.barnesandnoble.com/b/books/social-sciences/african-americans/_/N-1fZ29Z8q8Z1c3k?page=9 200 in 4647ms
 GET /api/crawl 200 in 18ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 19ms
 GET /api/crawl 200 in 17ms
 GET /api/crawl 200 in 17ms
 GET /api/crawl 200 in 19ms
⏰ Timeout reached after 60 seconds!
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
🔗 Testing product link extraction for URL: https://www.barnesandnoble.com/b/books/social-sciences/african-americans/_/N-1fZ29Z8q8Z1c3k?page=9
🌐 Starting makeAdvancedRequest for: https://www.barnesandnoble.com/b/books/social-sciences/african-americans/_/N-1fZ29Z8q8Z1c3k?page=9
🔄 Attempt 1/20 - DIRECT - UA: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWeb...
⏰ Starting request at: 2025-08-14T23:49:21.039Z
✅ Response: 200, Content: 358874 chars
✅ Detected valid Barnes & Noble content
📄 Page content length: 358874 chars
   a[href*="/w/"][href*="?ean="]: 178 total matches
      Valid product links found: 20
      Duplicates skipped: 158
   a[href^="/w/"]: 178 total matches
      Valid product links found: 0
      Duplicates skipped: 178
   a[href*="/w/"]: 178 total matches
      Valid product links found: 0
      Duplicates skipped: 178
✅ Analysis complete: 20 unique product links found
 GET /api/test-links?url=https://www.barnesandnoble.com/b/books/social-sciences/african-americans/_/N-1fZ29Z8q8Z1c3k?page=9 200 in 366ms
 GET /api/crawl 200 in 20ms
 GET /api/crawl 200 in 18ms
 GET /api/crawl 200 in 19ms
 GET /api/crawl 200 in 17ms
 GET /api/crawl 200 in 19ms
⏰ Timeout reached after 60 seconds!
 GET /api/crawl 200 in 21ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 26ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
🌟 POST /api/categories endpoint hit!
📋 Parsing request body...
📋 Action received: crawl
🚀 Starting category crawling...
🔧 Creating BarnesNobleScraper instance...
📡 About to call scraper.crawlCategories()...
🏁 Starting Promise.race...
🚀 Starting category crawl from Barnes & Noble...
📊 Setting progress to crawling_categories...
📊 Crawl progress: {
  category: 'Browse Page',
  currentPage: 1,
  totalPages: 1,
  currentProduct: 0,
  totalProducts: 0,
  successfulProducts: 0,
  failedProducts: 0,
  status: 'crawling_categories'
}
🎯 Target URL: https://www.barnesandnoble.com/h/books/browse
📡 Trying simple direct request first...
✅ Simple direct request successful! Status: 200
✅ Response received: 200, Content: 46256 chars
✅ Detected valid Barnes & Noble content
🔍 Parsing categories from browse page...
📁 Found category: Folklore & Mythology -> https://www.barnesandnoble.com/b/books/literature/folklore-mythology/_/N-29Z8q8Z2geb
📁 Found category: General Fiction -> https://www.barnesandnoble.com/b/books/fiction/_/N-29Z8q8Z10h8
📁 Found category: Graphic Novels & Comics -> https://www.barnesandnoble.com/b/books/graphic-novels-comics/_/N-29Z8q8Zucb
📁 Found category: Historical Fiction -> https://www.barnesandnoble.com/b/books/fiction/historical-fiction/_/N-29Z8q8Z10nf
📁 Found category: Horror -> https://www.barnesandnoble.com/b/books/fiction/horror/_/N-29Z8q8Z1d51
📁 Found category: Literary Fiction -> https://www.barnesandnoble.com/b/books/fiction/literary-fiction/_/N-29Z8q8Z10k1
📁 Found category: Literature -> https://www.barnesandnoble.com/b/books/literature/_/N-29Z8q8Z15v3
📁 Found category: Manga -> https://www.barnesandnoble.com/b/books/graphic-novels-comics-manga/_/N-29Z8q8Z2y35
📁 Found category: Mystery -> https://www.barnesandnoble.com/b/books/mystery-thrillers/_/N-29Z8q8Z16g4
📁 Found category: Poetry -> https://www.barnesandnoble.com/b/books/poetry/_/N-29Z8q8Z1pqh
📁 Found category: Romance -> https://www.barnesandnoble.com/b/books/romance/_/N-29Z8q8Z17y3
📁 Found category: Science Fiction & Fantasy -> https://www.barnesandnoble.com/b/books/science-fiction-fantasy/_/N-29Z8q8Z180l
📁 Found category: Thrillers -> https://www.barnesandnoble.com/b/books/mystery-thrillers/thrillers/_/N-8q8Z29Z2zzl
📁 Found category: Westerns -> https://www.barnesandnoble.com/b/books/fiction/westerns/_/N-29Z8q8Z10j9
📁 Found category: Activity & Game Books -> https://www.barnesandnoble.com/b/books/activity-game-books/_/N-29Z8q8Z1gj3
📁 Found category: African-American Studies -> https://www.barnesandnoble.com/b/books/social-sciences/african-americans/_/N-29Z8q8Z1c3k
📁 Found category: Antiques & Collectibles -> https://www.barnesandnoble.com/b/books/antiques-collectibles/_/N-29Z8q8Zs45
📁 Found category: Art, Architecture & Photography -> https://www.barnesandnoble.com/b/books/art-architecture-photography/_/N-29Z8q8Zs9i
📁 Found category: Astrology & Tarot -> https://www.barnesandnoble.com/b/books/new-age-alternative-beliefs/astrology-divination/_/N-29Z8q8Z1fil
📁 Found category: Bibles & Christianity -> https://www.barnesandnoble.com/b/books/bibles-christianity/_/N-29Z8q8Zsj2
📁 Found category: Biography -> https://www.barnesandnoble.com/b/books/biography/_/N-29Z8q8Zsoc
📁 Found category: Business Books -> https://www.barnesandnoble.com/b/books/business/_/N-29Z8q8Zt82
📁 Found category: Computers -> https://www.barnesandnoble.com/b/books/computers/_/N-29Z8q8Zug4
📁 Found category: Cookbooks, Food & Wine -> https://www.barnesandnoble.com/b/books/cookbooks-food-wine/_/N-29Z8q8Zy3b
📁 Found category: Crafts & Hobbies -> https://www.barnesandnoble.com/b/books/crafts-hobbies/_/N-29Z8q8Z1f43
📁 Found category: Current Affairs & Politics -> https://www.barnesandnoble.com/b/books/current-affairs-politics/_/N-29Z8q8Z16st
📁 Found category: Diet, Health & Fitness -> https://www.barnesandnoble.com/b/books/diet-health-fitness/_/N-29Z8q8Z11ip
📁 Found category: Education -> https://www.barnesandnoble.com/b/books/education/_/N-29Z8q8Zzmg
📁 Found category: Engineering -> https://www.barnesandnoble.com/b/books/science-technology/engineering/_/N-29Z8q8Z2bxy
📁 Found category: European History -> https://www.barnesandnoble.com/b/books/history/european-history/_/N-29Z8q8Z121w
📁 Found category: Fashion & Costume -> https://www.barnesandnoble.com/b/books/art-fashion-decorative-arts-design/fashion-costume/_/N-29Z8q8Zsc5
📁 Found category: Foreign Languages -> https://www.barnesandnoble.com/b/books/reference/foreign-language-study-aids-dictionaries/_/N-29Z8q8Z1gb0
📁 Found category: History -> https://www.barnesandnoble.com/b/books/history/_/N-29Z8q8Z11km
📁 Found category: Home & Garden -> https://www.barnesandnoble.com/b/books/home-garden/_/N-29Z8q8Z12zi
📁 Found category: Humor -> https://www.barnesandnoble.com/b/books/humor/_/N-29Z8q8Z15mo
📁 Found category: Law -> https://www.barnesandnoble.com/b/books/law/_/N-29Z8q8Z1f68
📁 Found category: LGBTQIA+ Studies -> https://www.barnesandnoble.com/b/books/social-sciences/lgbt-studies/_/N-29Z8q8Z190n
📁 Found category: Medicine & Nursing Books -> https://www.barnesandnoble.com/b/books/medicine-nursing/_/N-29Z8q8Z167w
📁 Found category: Military History -> https://www.barnesandnoble.com/b/books/history/military-history/_/N-29Z8q8Z11uw
📁 Found category: Music -> https://www.barnesandnoble.com/b/books/music-film-performing-arts/music/_/N-29Z8q8Z1bl4
📁 Found category: Nature -> https://www.barnesandnoble.com/b/books/nature/_/N-29Z8q8Z16i5
📁 Found category: New Age & Alternative Beliefs -> https://www.barnesandnoble.com/b/books/new-age-alternative-beliefs/_/N-29Z8q8Z1fib
📁 Found category: Parenting & Family -> https://www.barnesandnoble.com/b/books/parenting-family/_/N-29Z8q8Z16ql
📁 Found category: Performing Arts -> https://www.barnesandnoble.com/b/books/music-film-performing-arts/_/N-29Z8q8Zzzc
📁 Found category: Pets -> https://www.barnesandnoble.com/b/books/pets/_/N-29Z8q8Z1fjz
📁 Found category: Philosophy -> https://www.barnesandnoble.com/b/books/philosophy/_/N-29Z8q8Z1fe7
📁 Found category: Psychology -> https://www.barnesandnoble.com/b/books/psychology/_/N-29Z8q8Z1fcc
📁 Found category: Reference -> https://www.barnesandnoble.com/b/books/reference/_/N-29Z8q8Z1g9w
📁 Found category: Religion -> https://www.barnesandnoble.com/b/books/religion/_/N-29Z8q8Z17d6
📁 Found category: Role-Playing & Fantasy Games -> https://www.barnesandnoble.com/b/books/activity-game-books/role-playing-fantasy-games/_/N-29Z8q8Z1gj4
📁 Found category: Science & Technology -> https://www.barnesandnoble.com/b/books/science-technology/_/N-29Z8q8Z184l
📁 Found category: Social Sciences -> https://www.barnesandnoble.com/b/books/social-sciences/_/N-29Z8q8Z18q3
📁 Found category: Sociology -> https://www.barnesandnoble.com/b/books/social-sciences/sociology/_/N-29Z8q8Z197k
📁 Found category: Sports -> https://www.barnesandnoble.com/b/books/sports/_/N-29Z8q8Z19id
📁 Found category: Study Aids & Test Prep -> https://www.barnesandnoble.com/b/books/study-aids-test-prep/_/N-29Z8q8Z1gke
📁 Found category: Transportation -> https://www.barnesandnoble.com/b/books/transportation/_/N-29Z8q8Z2e1z
📁 Found category: Travel -> https://www.barnesandnoble.com/b/books/travel/_/N-29Z8q8Z1ary
📁 Found category: United States History -> https://www.barnesandnoble.com/b/books/history/united-states-history/_/N-29Z8q8Z11n2
📁 Found category: True Crime -> https://www.barnesandnoble.com/b/books/social-sciences/true-crime/_/N-29Z8q8Z2cm6
📁 Found category: Weddings -> https://www.barnesandnoble.com/b/books/self-help-relationships/weddings/_/N-29Z8q8Z1c1r
📁 Found category: Women's Studies -> https://www.barnesandnoble.com/b/books/social-sciences/womens-studies/_/N-29Z8q8Z191e
📁 Found category: Ages 0-2 -> https://www.barnesandnoble.com/b/books/kids/_/N-7Z29Z8q8Ztu1
📁 Found category: Ages 3-5 -> https://www.barnesandnoble.com/b/books/kids/_/N-8Z29Z8q8Ztu1
📁 Found category: Ages 6-8 -> https://www.barnesandnoble.com/b/books/kids/_/N-9Z29Z8q8Ztu1
📁 Found category: Ages 9-12 -> https://www.barnesandnoble.com/b/books/kids/_/N-aZ29Z8q8Ztu1
📁 Found category: Teens & YA -> https://www.barnesandnoble.com/b/books/teens/_/N-29Z8q8Z19r4
📁 Found category: All Kids' Books -> https://www.barnesandnoble.com/b/books/kids/_/N-29Z8q8Ztu1
📁 Found category: B&N Bestsellers -> https://www.barnesandnoble.com/b/books/_/N-1fZ29Z8q8
📁 Found category: Best Books of the Year -> https://www.barnesandnoble.com/b/books/awards/best-books-of-the-year/_/N-29Z8q8Z1qrh
📁 Found category: Book Awards -> https://www.barnesandnoble.com/b/books/awards/_/N-29Z8q8Z1d6q
📁 Found category: Book Club Selections -> https://www.barnesandnoble.com/b/books/awards/book-club-selections/_/N-29Z8q8Z1ql1
📁 Found category: Coming Soon -> https://www.barnesandnoble.com/b/books/_/N-26Z29Z8q8
📁 Found category: Discover Pick of the Month -> https://www.barnesandnoble.com/b/books/awards/barnes-noble-discover-great-new-writers/_/N-29Z8q8Z1qo8
📁 Found category: New Releases -> https://www.barnesandnoble.com/b/books/_/N-1sZ29Z8q8
📁 Found category: Oprah's Book Club -> https://www.barnesandnoble.com/b/books/book-club-selections/oprahs-book-club/_/N-29Z8q8Z1qld
📁 Found category: Large Print -> https://www.barnesandnoble.com/b/large-print/books/_/N-1pu1Z29Z8q8
🎉 Total categories found: 76
💾 Saved category: Folklore & Mythology
💾 Saved category: General Fiction
💾 Saved category: Graphic Novels & Comics
💾 Saved category: Historical Fiction
💾 Saved category: Horror
💾 Saved category: Literary Fiction
💾 Saved category: Literature
💾 Saved category: Manga
💾 Saved category: Mystery
💾 Saved category: Poetry
💾 Saved category: Romance
💾 Saved category: Science Fiction & Fantasy
💾 Saved category: Thrillers
💾 Saved category: Westerns
💾 Saved category: Activity & Game Books
💾 Saved category: African-American Studies
💾 Saved category: Antiques & Collectibles
💾 Saved category: Art, Architecture & Photography
💾 Saved category: Astrology & Tarot
💾 Saved category: Bibles & Christianity
💾 Saved category: Biography
💾 Saved category: Business Books
💾 Saved category: Computers
💾 Saved category: Cookbooks, Food & Wine
💾 Saved category: Crafts & Hobbies
💾 Saved category: Current Affairs & Politics
💾 Saved category: Diet, Health & Fitness
💾 Saved category: Education
💾 Saved category: Engineering
💾 Saved category: European History
💾 Saved category: Fashion & Costume
💾 Saved category: Foreign Languages
💾 Saved category: History
💾 Saved category: Home & Garden
💾 Saved category: Humor
💾 Saved category: Law
💾 Saved category: LGBTQIA+ Studies
💾 Saved category: Medicine & Nursing Books
💾 Saved category: Military History
💾 Saved category: Music
💾 Saved category: Nature
💾 Saved category: New Age & Alternative Beliefs
💾 Saved category: Parenting & Family
💾 Saved category: Performing Arts
💾 Saved category: Pets
💾 Saved category: Philosophy
💾 Saved category: Psychology
💾 Saved category: Reference
💾 Saved category: Religion
💾 Saved category: Role-Playing & Fantasy Games
💾 Saved category: Science & Technology
💾 Saved category: Social Sciences
💾 Saved category: Sociology
💾 Saved category: Sports
💾 Saved category: Study Aids & Test Prep
💾 Saved category: Transportation
💾 Saved category: Travel
💾 Saved category: United States History
💾 Saved category: True Crime
💾 Saved category: Weddings
💾 Saved category: Women's Studies
💾 Saved category: Ages 0-2
💾 Saved category: Ages 3-5
💾 Saved category: Ages 6-8
💾 Saved category: Ages 9-12
💾 Saved category: Teens & YA
💾 Saved category: All Kids' Books
💾 Saved category: B&N Bestsellers
💾 Saved category: Best Books of the Year
💾 Saved category: Book Awards
💾 Saved category: Book Club Selections
💾 Saved category: Coming Soon
💾 Saved category: Discover Pick of the Month
💾 Saved category: New Releases
💾 Saved category: Oprah's Book Club
💾 Saved category: Large Print
📊 Crawl progress: {
  category: 'Browse Page',
  currentPage: 1,
  totalPages: 1,
  currentProduct: 0,
  totalProducts: 0,
  successfulProducts: 0,
  failedProducts: 0,
  status: 'completed'
}
✅ Successfully crawled 76 categories
✅ Successfully found 76 categories: [
  'Folklore & Mythology',
  'General Fiction',
  'Graphic Novels & Comics',
  'Historical Fiction',
  'Horror',
  'Literary Fiction',
  'Literature',
  'Manga',
  'Mystery',
  'Poetry',
  'Romance',
  'Science Fiction & Fantasy',
  'Thrillers',
  'Westerns',
  'Activity & Game Books',
  'African-American Studies',
  'Antiques & Collectibles',
  'Art, Architecture & Photography',
  'Astrology & Tarot',
  'Bibles & Christianity',
  'Biography',
  'Business Books',
  'Computers',
  'Cookbooks, Food & Wine',
  'Crafts & Hobbies',
  'Current Affairs & Politics',
  'Diet, Health & Fitness',
  'Education',
  'Engineering',
  'European History',
  'Fashion & Costume',
  'Foreign Languages',
  'History',
  'Home & Garden',
  'Humor',
  'Law',
  'LGBTQIA+ Studies',
  'Medicine & Nursing Books',
  'Military History',
  'Music',
  'Nature',
  'New Age & Alternative Beliefs',
  'Parenting & Family',
  'Performing Arts',
  'Pets',
  'Philosophy',
  'Psychology',
  'Reference',
  'Religion',
  'Role-Playing & Fantasy Games',
  'Science & Technology',
  'Social Sciences',
  'Sociology',
  'Sports',
  'Study Aids & Test Prep',
  'Transportation',
  'Travel',
  'United States History',
  'True Crime',
  'Weddings',
  "Women's Studies",
  'Ages 0-2',
  'Ages 3-5',
  'Ages 6-8',
  'Ages 9-12',
  'Teens & YA',
  "All Kids' Books",
  'B&N Bestsellers',
  'Best Books of the Year',
  'Book Awards',
  'Book Club Selections',
  'Coming Soon',
  'Discover Pick of the Month',
  'New Releases',
  "Oprah's Book Club",
  'Large Print'
]
 POST /api/categories 200 in 799ms
 GET /api/crawl 200 in 21ms
 GET /api/categories 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 14ms
🌟 POST /api/categories endpoint hit!
📋 Parsing request body...
📋 Action received: find_bestsellers
🔍 Finding bestseller link for category 15: https://www.barnesandnoble.com/b/books/activity-game-books/_/N-29Z8q8Z1gj3
🔍 Finding bestseller link for category: https://www.barnesandnoble.com/b/books/activity-game-books/_/N-29Z8q8Z1gj3
🌐 Starting makeAdvancedRequest for: https://www.barnesandnoble.com/b/books/activity-game-books/_/N-29Z8q8Z1gj3
🔄 Attempt 1/20 - DIRECT - UA: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWeb...
⏰ Starting request at: 2025-08-14T23:52:45.016Z
 GET /api/crawl 200 in 14ms
✅ Response: 200, Content: 930471 chars
✅ Detected valid Barnes & Noble content
📄 Page loaded, content length: 930471 chars
🔍 Searching with 31 different selectors...
   .record-spotlight-header a.see-all-link: 7 matches
   Found: "See All" -> /b/books/activity-game-books/_/N-1fZ29Z8q8Z1gj3;jsessionid=9063745F21FEAADE4B0B3A8426B81369.prodny_store02-atgap06?Ns=P_Sales_Rank
✅ Found bestseller URL with ".record-spotlight-header a.see-all-link": https://www.barnesandnoble.com/b/books/activity-game-books/_/N-1fZ29Z8q8Z1gj3
✅ Found bestseller URL: https://www.barnesandnoble.com/b/books/activity-game-books/_/N-1fZ29Z8q8Z1gj3
 POST /api/categories 200 in 2879ms
 GET /api/crawl 200 in 14ms
 GET /api/categories 200 in 37ms
 GET /api/crawl 200 in 18ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 21ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
⏰ Timeout reached after 60 seconds!
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 13ms
 GET /api/categories 200 in 18ms
 ○ Compiling /api/products ...
 ✓ Compiled /api/products in 626ms
 GET /api/products 200 in 651ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 15ms
 GET / 200 in 241ms
 GET /api/categories 200 in 164ms
 GET /api/crawl 200 in 30ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 13ms
 GET / 200 in 73ms
 GET /api/categories 200 in 180ms
 GET /api/crawl 200 in 168ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 13ms
 GET /api/crawl 200 in 13ms
 GET / 200 in 73ms
 GET /api/categories 200 in 236ms
 GET /api/crawl 200 in 247ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 16ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 41ms
 ○ Compiling /api/database-status ...
 ✓ Compiled /api/database-status in 532ms
 ⨯ ./src/app/api/database-status/route.ts:2:1
Export initDatabase doesn't exist in target module
[0m [90m 1 |[39m [36mimport[39m { [33mNextRequest[39m[33m,[39m [33mNextResponse[39m } [36mfrom[39m [32m'next/server'[39m[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { categoryService[33m,[39m productService[33m,[39m productLinkService[33m,[39m initDatabase } [36mfrom[39m [32m'@/lib/database'[39m[33m;[39m[0m
[0m [90m   |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 3 |[39m[0m
[0m [90m 4 |[39m [36mexport[39m [36masync[39m [36mfunction[39m [33mGET[39m() {[0m
[0m [90m 5 |[39m   [36mtry[39m {[0m

The export initDatabase was not found in module [project]/src/lib/database.ts [app-route] (ecmascript).
Did you mean to import sessionService?
All exports of the module are statically known (It doesn't have dynamic exports). So it's known statically that the requested export doesn't exist.


 ○ Compiling /_error ...
 ✓ Compiled /_error in 1347ms
 GET /api/database-status 500 in 2051ms
 ⨯ ./src/app/api/database-status/route.ts:2:1
Export initDatabase doesn't exist in target module
[0m [90m 1 |[39m [36mimport[39m { [33mNextRequest[39m[33m,[39m [33mNextResponse[39m } [36mfrom[39m [32m'next/server'[39m[33m;[39m[0m
[0m[31m[1m>[22m[39m[90m 2 |[39m [36mimport[39m { categoryService[33m,[39m productService[33m,[39m productLinkService[33m,[39m initDatabase } [36mfrom[39m [32m'@/lib/database'[39m[33m;[39m[0m
[0m [90m   |[39m [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m
[0m [90m 3 |[39m[0m
[0m [90m 4 |[39m [36mexport[39m [36masync[39m [36mfunction[39m [33mGET[39m() {[0m
[0m [90m 5 |[39m   [36mtry[39m {[0m

The export initDatabase was not found in module [project]/src/lib/database.ts [app-route] (ecmascript).
Did you mean to import sessionService?
All exports of the module are statically known (It doesn't have dynamic exports). So it's known statically that the requested export doesn't exist.


 GET /api/database-status 500 in 19ms
 GET /api/crawl 500 in 27ms
 GET / 500 in 26ms
 GET / 500 in 28ms
 GET /api/database-status 500 in 64ms
 GET / 200 in 99ms
 GET /api/categories 200 in 188ms
 GET /api/crawl 200 in 208ms
 GET /api/crawl 200 in 14ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 17ms
 GET /api/crawl 200 in 15ms
 GET /api/crawl 200 in 19ms
